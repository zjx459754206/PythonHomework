Q1：x = x + 1 与 x  += 1有什么差别？？？
用程序表示一下差异
（提示：分可变对象 与 不可变对象情况，第四章内容）
#可变对象：列表
a = [1,2,3]
b=a
id(a)
Out[100]: 2189766661576
id(b)
Out[101]: 2189766661576
a = a + [4,5,6]
id(a)
Out[103]: 2189664904520
id(b)
Out[104]: 2189766661576

a = [1,2,3]
b=a
id(a)
Out[93]: 2189765764360
id(b)
Out[94]: 2189765764360
a += [4, 5, 6]
id(a)
Out[96]: 2189765764360
id(b)
Out[97]: 2189765764360

可以看出，对于可变对象而言 x = x + 1 这种形式会改变x的指向，x  += 1这种形式不会改变x的指向。

#不可变对象：元组
a=(1,2,3)
b =a
id(a)
Out[107]: 2189738980408
id(b)
Out[108]: 2189738980408
a = a +(4,5,6)
id(a)
Out[112]: 2189766673224
id(b)
Out[113]: 2189738980408

a=(1,2,3)
b=a
id(a)
Out[123]: 2189741838480
id(b)
Out[124]: 2189741838480
a+=(4,5,6)
id(a)
Out[126]: 2189766247624
id(b)
Out[127]: 2189741838480

可以看出，对于不可变对象而言，x = x + 1和x  += 1这两种形式都会改变x的指向。



Q2：对象相等。您认为type(a) == type(b)和type(a) is type(b)之间的不同是什么？
为什么会选择后者？函数isinstance()与这有什么关系？
答：‘=='比较的是值，is比较的是对象。
因为每个对象只可能有一种类型的值，所以可以直接比较他们类型的ID，而不用计算类型的具体值再做比较。
后式比前式少了一步，在比较多的情况下，后者效率更高。
对于类型比较，最优方法还是isinstance()。函数isinstance()用来确定这个对象是否属于这个类型，或者实例是否属于某个类。

a='zjx'
b='zxc'
type(a)==type(b)
Out[137]: True
type(a) is type(b)
Out[138]: True

type(a)
Out[139]: str
type(b)
Out[140]: str

id(type(a))
Out[141]: 1759887088
id(type(b))
Out[142]: 1759887088

a='zjx'

isinstance(a,(int,float,complex))
Out[148]: False

isinstance(a,(int,float,complex,str))
Out[149]: True

Q3:
输入一个2维矩阵 ，打印该矩阵
（提示：用list嵌套list来表示矩阵）
例:
输入：
1 0
2 3
输出：
1 0
2 3

#代码
a=[]
for i in range(2):
    b = input().split(' ')
    b = [int(x) for x in b]
    a.append(b)
#运行结果
a=[]
for i in range(2):
    b = input().split(' ')
    b = [int(x) for x in b]
    a.append(b)
    

1 0

2 3

a
Out[17]: [[1, 0], [2, 3]]

a[0][0]
Out[18]: 1

a[0][1]
Out[19]: 0

a[1][0]
Out[20]: 2

a[1][1]
Out[21]: 3


Q4:
根据书3.6敲出第一个python程序


提交python脚本文件